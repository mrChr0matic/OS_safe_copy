//int11 -> Wait, Signal, Getpid, Getppid
breakpoint;

alias userSP R0;
userSP = SP;

//switch to kernel stack

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13] = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 11]*512 - 1;


//extract the sys call number

alias sysCallNum R1;
sysCallNum = [ ( [PTBR + 2*((userSP-5)/512)]*512 ) + (userSP-5)%512 ];


//Getpid

if( sysCallNum == INT_GETPID ) then

	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = sysCallNum;
	[( [PTBR + 2*((userSP-1)/512)]*512 ) + (userSP-1)%512] = [SYSTEM_STATUS_TABLE+1];
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
	SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];
	ireturn;

endif;

//Getppid

if( sysCallNum == INT_GETPPID ) then

	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = sysCallNum;
	[( [PTBR + 2*((userSP-1)/512)]*512 ) + (userSP-1)%512] = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 2];
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
	SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];
	ireturn;

endif;


//Wait

if(sysCallNum == INT_WAIT ) then

	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = sysCallNum;

	alias pid R2;
	pid = [ ( [PTBR + 2*((userSP-4)/512)]*512 ) + (userSP-4)%512 ];
	
    //validation

	if( pid == [SYSTEM_STATUS_TABLE+1] || [PROCESS_TABLE + pid*16 + 4] == TERMINATED || pid < 1 || pid >= 16 ) then
		[( [PTBR + 2*((userSP-1)/512)]*512 ) + (userSP-1)%512] = -1;
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
		SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];
		ireturn;
	endif;

	//success
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 4] = WAIT_PROCESS;
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 5] = pid;
	
    //call scheduler
	multipush(R0, R1, R2, R3);
	call SCHEDULER;
	multipop(R0, R1, R2, R3);

	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
	[( [PTBR + 2*((userSP-1)/512)]*512 ) + (userSP-1)%512] = 0;
	SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];

	ireturn;
	
endif;


//Signal

if( sysCallNum == INT_SIGNAL ) then
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = sysCallNum;
	
	alias i R3;
	i = 1;
	while( i < 16 ) do
		if( [PROCESS_TABLE + i*16 + 4] == WAIT_PROCESS && [PROCESS_TABLE + i*16 + 5] == [SYSTEM_STATUS_TABLE+1] ) then
			[PROCESS_TABLE + i*16 + 4] = READY;
		endif;
		i = i + 1;
	endwhile;
    
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
	[( [PTBR + 2*((userSP-1)/512)]*512 ) + (userSP-1)%512] = 0;
	SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];
	ireturn;
endif;

breakpoint;
ireturn;